---
- name: Configure AmneziaWG for {{ interface.name }}
  template:
    src: awg.conf.j2
    dest: "/etc/amnezia/amneziawg/{{ interface.name }}.conf"
    owner: root
    group: root
    mode: '0600'
  become: true
  register: config_changed

- name: Enable AmneziaWG service for {{ interface.name }}
  systemd:
    name: "awg-quick@{{ interface.name }}"
    enabled: yes
  become: true

- name: Start AmneziaWG service for {{ interface.name }} if not running
  systemd:
    name: "awg-quick@{{ interface.name }}"
    state: started
  become: true
  when: not config_changed.changed

- name: Restart AmneziaWG service for {{ interface.name }}
  systemd:
    name: "awg-quick@{{ interface.name }}"
    state: restarted
  become: true
  when: config_changed.changed

- name: Wait for AmneziaWG service to be active for {{ interface.name }}
  systemd:
    name: "awg-quick@{{ interface.name }}"
    state: started
  register: service_status
  until: service_status.status.ActiveState == 'active'
  retries: 5
  delay: 5
  become: true

- name: Generate client config for {{ peer.name }}
  delegate_to: localhost
  become: false
  template:
    src: awg-client.conf.j2
    dest: "{{ repo_abs_path.stdout }}/provision/vpn-server-awg-configs/{{ inventory_hostname }}/{{ peer.name }}.conf"
    mode: '0600'
  loop: "{{ interface.peers }}"
  loop_control:
    loop_var: peer
    label: "{{ peer.name }}"
  when: interface.peers is defined
