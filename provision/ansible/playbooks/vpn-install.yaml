---
- hosts:
    - vpn
  become: true
  gather_facts: true
  any_errors_fatal: true
  tasks:
    - name: Prepare / Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
          - wireguard
        state: latest
        update_cache: true

    - name: Prepare / Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Prepare / Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Prepare / Install Docker
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: true

    - name: Prepare / Install Docker Module for Python
      pip:
        name: docker

    # - name: VPN / Create server wireguard config
    #   template:
    #     dest: /etc/wireguard/wg0.conf
    #     src: server_wg0.conf.j2
    #     owner: root
    #     group: root
    #     mode: '0600'

    - name: VPN / Enable and persist ip forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: "1"
        state: present
        sysctl_set: yes
        reload: yes

    - name: VPN / Start wireguard and enable on boot
      systemd:
        name: wg-quick@wg0
        enabled: yes
        state: started

    - name: VPN / Pull WireGuard Portal Image
      community.docker.docker_image:
        name: "h44z/wg-portal:latest"
        source: pull

    - name: VPN / Create WireGuard Portal Container
      community.docker.docker_container:
        name: "wg-portal"
        image: "h44z/wg-portal:latest"
        restart_policy: unless-stopped
        capabilities:
          - NET_ADMIN
        network_mode: host
        volumes:
          - /etc/wireguard:/etc/wireguard
          - /opt/wg-portal:/app/data
        ports:
          - "8123:8123"
        labels:
          traefik.enable: "true"
          traefik.http.services.wg-portal.loadbalancer.server.port: "8123"
          traefik.http.routers.wg-portal.entrypoints: websecure
          traefik.http.routers.wg-portal.tls.certresolver: le
          traefik.http.routers.wg-portal.tls: "true"
        env:
          # WireGuard Settings
          WG_DEVICES: wg0
          WG_DEFAULT_DEVICE: wg0
          WG_CONFIG_PATH: "/etc/wireguard"
          # Core Settings
          EXTERNAL_URL: "https://vpn.company.com"
          WEBSITE_TITLE: "WireGuard VPN"
          COMPANY_NAME: "Your Company Name"
          ADMIN_USER: "{{ wg_portal_admin_user }}"
          ADMIN_PASS: "{{ wg_portal_admin_pass }}"
          # Mail Settings
          MAIL_FROM: "WireGuard VPN <noreply+wireguard@company.com>"
          EMAIL_HOST: "10.10.10.10"
          EMAIL_PORT: "25"
          # LDAP Settings
          LDAP_ENABLED: "false"
          # - LDAP_URL=ldap://srv-ad01.company.local:389
          # - LDAP_BASEDN=DC=COMPANY,DC=LOCAL
          # - LDAP_USER=ldap_wireguard@company.local
          # - LDAP_PASSWORD=supersecretldappassword
          # - LDAP_ADMIN_GROUP=CN=WireGuardAdmins,OU=Users,DC=COMPANY,DC=LOCAL
        state: started

    - name: Ingress / Create Traefik config directory
      file:
        path: "/opt/traefik"
        state: directory

    - name: Ingress / Create Traefik config
      template:
        dest: /opt/traefik/traefik.yml
        src: wg-traefik.yaml.j2
        owner: root
        group: root
        mode: '0600'

    - name: VPN / Create Traefik container
      community.docker.docker_container:
        name: "traefik"
        image: "traefik:v2.5"
        restart_policy: unless-stopped
        etc_hosts:
          host.docker.internal: host-gateway
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /opt/traefik:/etc/traefik
        ports:
          - "80:80"
          - "8080:8080"
          - "443:443"
        state: started
