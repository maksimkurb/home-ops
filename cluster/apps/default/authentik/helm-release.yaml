---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io
      chart: authentik
      version: 5.1.1
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/goauthentik/server
      tag: 2021.12.4
      pullPolicy: IfNotPresent

    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        external-dns/is-public: "true"
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hajimari.io/appName: "Authentik"
        hajimari.io/enable: "true"
        hajimari.io/icon: "account-key"
      hosts:
        - host: sso.${SECRET_DOMAIN}
          paths:
            - path: /
      tls:
        - secretName: authentik-tls
          hosts:
            - sso.${SECRET_DOMAIN}

    authentik:
      # secret_key: set by valuesFrom
      # log_level: debug

      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s

      email:
        host: "${SECRET_SMTP_HOST}"
        port: "${SECRET_SMTP_PORT_TLS}"
        # username: set by valuesFrom
        # password: set by valuesFrom
        use_tls: "${SECRET_SMTP_TLS}"
        use_ssl: "false"
        from: "Authentik <${SECRET_SMTP_USERNAME}>"

      postgresql:
        host: "homelab-pgsql.database.svc.cluster.local"
        name: authentik
        user: authentik
        # password: set by valuesFrom
      redis:
        host: "{{ .Release.Name }}-redis-master"
        # password: set by valuesFrom

    resources:
      server:
        requests:
          memory: 384Mi
        limits:
          memory: 512Mi
      worker:
        requests:
          memory: 384Mi
        limits:
          memory: 512Mi
    
    envValueFrom:
      AUTHENTIK_POSTGRESQL__PASSWORD:
        secretKeyRef:
          key: postgresPassword
          name: authentik
      AUTHENTIK_SECRET_KEY:
        secretKeyRef:
          key: authentikSecretKey
          name: authentik
      AUTHENTIK_REDIS__PASSWORD:
        secretKeyRef:
          key: redisPassword
          name: authentik
      AUTHENTIK_EMAIL__USERNAME:
        secretKeyRef:
          key: smtpUser
          name: authentik
      AUTHENTIK_EMAIL__PASSWORD:
        secretKeyRef:
          key: smtpPassword
          name: authentik

    postgresql:
      enabled: false

    redis:
      enabled: true
      auth:
        enabled: true
        # password: set by valuesFrom

      master:
        resources:
          requests:
            memory: 32Mi
          limits:
            memory: 64Mi

  valuesFrom:
    - kind: Secret
      name: authentik
      valuesKey: redisPassword
      targetPath: redis.auth.password
      optional: false