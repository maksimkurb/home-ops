---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  values:
    controllers:
      paperless:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.19.1
            env:
              # Encoding
              # WARNING: for German / Russian PDFs it is required to set "PDF" renderer instead of "PDF/A" in paperless-ngx settings
              # See: https://github.com/ocrmypdf/OCRmyPDF/issues/1297
              LANG: C.UTF-8
              LC_ALL: C.UTF-8
              # Configure application
              PAPERLESS_SECRET_KEY:
                valueFrom:
                  secretKeyRef:
                    name: paperless
                    key: PAPERLESS_SECRET_KEY
              PAPERLESS_URL: https://paperless.${SECRET_PUBLIC_DOMAIN}
              PAPERLESS_PORT: "8000"
              PAPERLESS_TIME_ZONE: "${TIMEZONE}"
              PAPERLESS_WEBSERVER_WORKERS: "2"
              PAPERLESS_TASK_WORKERS: "2"
              # Configure folders
              PAPERLESS_DATA_DIR: /data/local/data
              PAPERLESS_MEDIA_ROOT: /data/docs/media
              PAPERLESS_CONSUMPTION_DIR: /data/docs/incoming
              PAPERLESS_EXPORT_DIR: /data/docs/export
              # Configure folder importer
              PAPERLESS_CONSUMER_POLLING: "60"
              PAPERLESS_CONSUMER_INOTIFY_DELAY: "60"
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              # Configure Barcode Recognition
              PAPERLESS_CONSUMER_ENABLE_BARCODES: "true"
              PAPERLESS_CONSUMER_ENABLE_ASN_BARCODE: "true"
              PAPERLESS_CONSUMER_BARCODE_SCANNER: "ZXING"
              # Configure Tika
              PAPERLESS_TIKA_ENABLED: 1
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg.default.svc.cluster.local:3000
              PAPERLESS_TIKA_ENDPOINT: http://paperless-tika.default.svc.cluster.local:9998
              # Configure DB
              PAPERLESS_DBENGINE: postgresql
              PAPERLESS_DBHOST: homelab-pgsql.database.svc.cluster.local
              PAPERLESS_DBUSER: paperless
              PAPERLESS_DBPASS:
                valueFrom:
                  secretKeyRef:
                    name: paperless
                    key: PAPERLESS_DBPASS
              # Configure user ID
              USERMAP_UID: "777"
              USERMAP_GID: "777"
              # Enable SSO
              PAPERLESS_APPS: "allauth.socialaccount.providers.openid_connect"
              PAPERLESS_SOCIALACCOUNT_PROVIDERS:
                valueFrom:
                  secretKeyRef:
                    name: paperless
                    key: PAPERLESS_SOCIALACCOUNT_PROVIDERS
              PAPERLESS_DISABLE_REGULAR_LOGIN: "false"
              PAPERLESS_REDIRECT_LOGIN_TO_SSO: "false"
              # Configure OCR
              PAPERLESS_OCR_LANGUAGES: "rus eng"
              PAPERLESS_OCR_LANGUAGE: rus
              # Configure redis integration
              PAPERLESS_REDIS: redis://paperless-redis.default.svc.cluster.local:6379
              # Configure admin user
              PAPERLESS_ADMIN_USER:
                valueFrom:
                  secretKeyRef:
                    name: paperless
                    key: PAPERLESS_ADMIN_USER
              PAPERLESS_ADMIN_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: paperless
                    key: PAPERLESS_ADMIN_PASSWORD
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 25m
                memory: 2Gi
              limits:
                memory: 6Gi
            securityContext:
              runAsGroup: 777
              fsGroup: 777
              fsGroupChangePolicy: "OnRootMismatch"
              supplementalGroups: ["777"]
      gotenberg:
        containers:
          app:
            image:
              repository: ghcr.io/mchestr/gotenberg
              tag: 8.17.3
            env:
              LANG: C.UTF-8
              LC_ALL: C.UTF-8
              DISABLE_GOOGLE_CHROME: "0"
              CHROMIUM_DISABLE_JAVASCRIPT: "true"
            securityContext:
              runAsUser: 65534
              runAsGroup: 65534
              fsGroupChangePolicy: "OnRootMismatch"
              supplementalGroups: ["65534"]
      tika:
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.1-full
            env:
              LANG: C.UTF-8
              LC_ALL: C.UTF-8
            securityContext:
              runAsUser: 65534
              runAsGroup: 65534
      redis:
        containers:
          redis:
            image:
              repository: docker.io/valkey/valkey
              tag: 8.1.4
            resources:
              requests:
                cpu: 5m
                memory: 32Mi
              limits:
                memory: 128Mi

    service:
      app:
        controller: paperless
        ports:
          http:
            port: 8000
      gotenberg:
        controller: gotenberg
        ports:
          http:
            port: 3000
      tika:
        controller: tika
        ports:
          http:
            port: 9998
      redis:
        controller: redis
        ports:
          http:
            port: 6379

    ingress:
      app:
        enabled: true
        className: "nginx"
        annotations:
          external-dns.alpha.kubernetes.io/enabled: "true"
          external-dns.alpha.kubernetes.io/target: ${INGRESS_DEFAULT}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: ${quote}${INGRESS_DEFAULT_CF_PROXY}${quote}
          nginx.ingress.kubernetes.io/server-snippet: |
            location /admin/ {
              deny all;
            }
          hajimari.io/icon: "file-document-multiple"
          hajimari.io/group: "Home"
          hajimari.io/appName: "Paperless"
        hosts:
          - host: paperless.${SECRET_PUBLIC_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http

    persistence:
      data:
        existingClaim: paperless-data
        advancedMounts:
          paperless:
            app:
              - path: /data/local
      docs:
        existingClaim: paperless-docs
        advancedMounts:
          paperless:
            app:
              - path: /data/docs
      gotenberg-temp:
        type: emptyDir
        enabled: true
        advancedMounts:
          gotenberg:
            app:
              - path: /nonexistent
