---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kopia
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
    timeout: 15m0s
  upgrade:
    remediation:
      retries: 5
    timeout: 15m0s
  values:

    global:
      nameOverride: *app

    initContainers:
      wait-for-repo:
        image: kopia/kopia:0.18
        command:
          - /bin/bash
          - -c
          - |-
            until [ -f /snapshots/kopia.repository.f ]; do
                printf "\e[1;32m%-6s\e[m\n" "Awaiting for the Kopia repo to become ready ..."
                sleep 1
            done
        volumeMounts:
          - name: snapshots
            mountPath: /snapshots

    service:
      main:
        ports:
          http:
            port: 80
          metrics:
            enabled: true
            port: 8080

    ingress:
      main:
        enabled: true
        annotations:
          # ForwardAuth start
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: |-
            http://authelia.security.svc.cluster.local:8000/api/verify
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://auth.${SECRET_PUBLIC_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Method $request_method;
          # ForwardAuth end
          nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/appName: "Kopia backups"
          hajimari.io/icon: "backup-restore"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
        className: nginx

    persistence:
      config:
        enabled: true
        type: configMap
        name: *app
        readOnly: true
        advancedMounts:
          main:
            main:
              - path: /config/repository.config
                subPath: repository.config
      source:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: kopia-data
        readOnly: true
        globalMounts:
          - path: /data
      restore:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: kopia-data-rw
        globalMounts:
          - path: /data-rw
      snapshots:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: kopia-snapshots-nfs
        globalMounts:
          - path: /snapshots

    defaultPodOptions:
      securityContext:
        supplementalGroups:
          - 777

    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: kopia/kopia
              tag: 20241125.0.234320
            env:
              TZ: "${TIMEZONE}"
              KOPIA_CONFIG_PATH: /config/repository.config
              KOPIA_PASSWORD: "${SECRET_KOPIA_REPO_PASSWORD}"
            command: kopia
            args:
              - --log-level=debug
              - server
              - start
              - --insecure
              - --address
              - 0.0.0.0:80
              - --metrics-listen-addr
              - 0.0.0.0:8080
              - --without-password
            resources:
              requests:
                cpu: 1m
                memory: 100Mi
              limits:
                memory: 1000Mi
