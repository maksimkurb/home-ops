---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sftpgo
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.4.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    service:
      main:
        controller: main
        type: LoadBalancer
        externalTrafficPolicy: Local
        loadBalancerIP: "${SVC_SFTPGO_ADDR}"
        ports:
          http:
            enabled: true
            port: 13280
            protocol: TCP
            targetPort: 8080
          dav:
            enabled: true
            port: 13288
            protocol: TCP
            targetPort: 8088
          sftp:
            enabled: true
            port: 13222
            protocol: TCP
            targetPort: 2022

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/enabled: "true"
          external-dns.alpha.kubernetes.io/target: ${INGRESS_TUNNEL}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
          nginx.ingress.kubernetes.io/proxy-buffering: "off"
          nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/custom-http-errors: "599" # Disable custom HTTP errors for this endpoint
          nginx.ingress.kubernetes.io/configuration-snippet: |
            chunked_transfer_encoding off;
          hajimari.io/appName: "File Manager (SFTPGo)"
          hajimari.io/icon: file-cloud
        hosts:
          - host: &host f.${SECRET_PUBLIC_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
              - path: /dav
                pathType: Prefix
                service:
                  identifier: main
                  port: dav

    persistence:
      config:
        enabled: true
        type: configMap
        name: *app
        advancedMounts:
          main:
            main:
              - path: /etc/sftpgo/sftpgo.json
                subPath: config.json
                readOnly: true
            migrate-db:
              - path: /etc/sftpgo/sftpgo.json
                subPath: config.json
                readOnly: true
      media:
        enabled: true
        existingClaim: sftpgo-media
        globalMounts:
          - path: /data/media
      filehosting:
        enabled: true
        existingClaim: sftpgo-filehosting
        globalMounts:
          - path: /data/filehosting

    resources:
      requests:
        cpu: 1m
        memory: 10Mi
      limits:
        memory: 200Mi

    defaultPodOptions:
      securityContext:
        runAsUser: 777
        runAsGroup: 777
        fsGroup: 777
        fsGroupChangePolicy: "OnRootMismatch"

    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          migrate-db:
            image:
              repository: ghcr.io/drakkan/sftpgo
              tag: v2.6-distroless-slim
            command:
              - sftpgo
              - initprovider
            env:
              TZ: "${TIMEZONE}"
            envFrom:
              - secretRef:
                  name: *app
        containers:
          main:
            image:
              repository: ghcr.io/drakkan/sftpgo
              tag: v2.6-distroless-slim
            env:
              TZ: "${TIMEZONE}"
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
