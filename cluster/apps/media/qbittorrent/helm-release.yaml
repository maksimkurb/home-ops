---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/qbittorrent
      tag: 4.5.1
    env:
      TZ: "Europe/Saratov"
      WAIT_FOR_VPN: "true"
      QBITTORRENT__PORT: &port 80
      QBITTORRENT__BT_PORT: &port-bt 50413
    service:
      main:
        ports:
          http:
            port: *port
      bittorrent:
        enabled: true
        type: LoadBalancer
        externalIPs: ["${SVC_QBITTORRENT_ADDR}"]
        ports:
          bittorrent:
            enabled: true
            port: *port-bt
            protocol: TCP
            targetPort: *port-bt
        externalTrafficPolicy: Local
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          hajimari.io/enable: "true"
          hajimari.io/icon: "cloud-download"
          hajimari.io/group: "Media automation"
          hajimari.io/appName: "qBitTorrent"
          hajimari.io/info: "Torrent client"
        hosts:
          - host: "qbittorrent.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "qbittorrent.${SECRET_DOMAIN}"
            secretName: qbittorrent-tls
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups: [10000]
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent-config-v1
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${SECRET_NFS_SERVER_HOST}"
            path: ${SECRET_NFS_PATH}/01_media
        mountPath: /media
      shared:
        enabled: true
        type: emptyDir
        mountPath: /shared
    resources:
      requests:
        cpu: 50m
        memory: 250Mi
      limits:
        cpu: 1000m
        memory: 2G
    addons:
      vpn:
        enabled: true
        type: gluetun
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        env:
          # Enable a killswitch that kills all trafic when the VPN is not connected
          KILLSWITCH: "true"
          IPTABLES_BACKEND: nft
          VPN_TYPE: wireguard
        configFile: |-
          [Interface]
          PrivateKey = ${SECRET_VPN_QBITTORRENT_PRIVATE_KEY}
          Address = 10.0.51.100/24
          DNS = 8.8.8.8
          PostUp = /config/up.sh %i
          PreDown = /config/down.sh %i
          FwMark = 1341

          [Peer]
          PublicKey = ${SECRET_VPN_PUBLIC_KEY}
          AllowedIPs = 10.0.51.1/32, 172.67.193.9/32, 104.21.84.130/32, 195.82.146.120/30, 46.148.18.243/32, 194.106.216.222/32, 194.106.216.222/32, 185.167.98.127/32, 45.132.105.85/32
          Endpoint = ${SECRET_VPN_ENDPOINT}
          PersistentKeepalive = 25
        scripts:
          up: |-
            #!/bin/bash
            echo "connected" > /shared/vpnstatus
          down: |-
            #!/bin/bash
            echo "disconnected" > /shared/vpnstatus
