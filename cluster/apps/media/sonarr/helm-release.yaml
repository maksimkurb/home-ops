---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: sonarr
      version: 16.3.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/k8s-at-home/sonarr
      tag: v3.0.9.1549
    env:
      TZ: "Europe/Saratov"
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          hajimari.io/enable: "true"
          hajimari.io/icon: "television-box"
          hajimari.io/group: "Media automation"
          hajimari.io/appName: "Sonarr"
          hajimari.io/info: "TV Shows download automation"
        hosts:
          - host: "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "sonarr.${SECRET_DOMAIN}"
            secretName: sonarr-tls
    podSecurityContext:
      supplementalGroups:
        - 100
    # metrics:
    #   enabled: true
    #   serviceMonitor:
    #     interval: 3m
    #     scrapeTimeout: 1m
    #   prometheusRule:
    #     enabled: true
    #   exporter:
    #     image:
    #       repository: ghcr.io/onedr0p/exportarr
    #       tag: v0.6.2
    #     env:
    #       port: 9794
    #       additionalMetrics: true
    #       unknownQueueItems: false
    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config-v1
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${SECRET_NFS_SERVER_HOST}"
            path: ${SECRET_NFS_PATH}/01_media
        mountPath: /media
      backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${SECRET_NFS_SERVER_HOST}"
            path: "${SECRET_NFS_PATH}/02_backups/sonarr"
        mountPath: /config/Backups
        readOnly: false
    resources:
      requests:
        cpu: 50m
        memory: 250Mi
      limits:
        cpu: 500m
        memory: 1G
