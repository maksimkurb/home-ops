---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jackett
  namespace: media
spec:
  interval: 10m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: jackett
      version: 11.3.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
  values:
    image:
      repository: ghcr.io/k8s-at-home/jackett
      tag: v0.20.319
    env:
      TZ: "Europe/Saratov"
      WAIT_FOR_VPN: "true"
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "default-ak-outpost-authentik-embedded-outpost@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/icon: "tshirt-crew"
          hajimari.io/group: "Media"
        hosts:
          - host: jackett.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - jackett.${SECRET_DOMAIN}
            secretName: jackett-tls
    persistence:
      config:
        enabled: true
        existingClaim: jackett-config-v1
      shared:
        enabled: true
        type: emptyDir
        mountPath: /shared
    resources:
      requests:
        cpu: 50m
        memory: 300Mi
      limits:
        cpu: 500m
        memory: 500Mi
    addons:
      vpn:
        enabled: true
        type: wireguard
        securityContext:
          runAsUser: 568
          runAsGroup: 568
        env:
          # Enable a killswitch that kills all trafic when the VPN is not connected
          KILLSWITCH: "true"
        configFile: |-
          [Interface]
          PrivateKey = ${SECRET_VPN_JACKET_PRIVATE_KEY}
          Address = 10.0.51.100/24
          DNS = 8.8.8.8
          PostUp = /config/up.sh %i
          PreDown = /config/down.sh %i

          [Peer]
          PublicKey = ${SECRET_VPN_PUBLIC_KEY}
          AllowedIPs = 0.0.0.0/5, 8.0.0.0/7, 11.0.0.0/8, 12.0.0.0/6, 16.0.0.0/4, 32.0.0.0/3, 64.0.0.0/2, 128.0.0.0/3, 160.0.0.0/5, 168.0.0.0/6, 172.0.0.0/12, 172.32.0.0/11, 172.64.0.0/10, 172.128.0.0/9, 173.0.0.0/8, 174.0.0.0/7, 176.0.0.0/4, 192.0.0.0/9, 192.128.0.0/11, 192.160.0.0/13, 192.169.0.0/16, 192.170.0.0/15, 192.172.0.0/14, 192.176.0.0/12, 192.192.0.0/10, 193.0.0.0/8, 194.0.0.0/7, 196.0.0.0/6, 200.0.0.0/5, 208.0.0.0/4, 8.8.8.8/32, 8.8.4.4/32
          Endpoint = ${SECRET_VPN_ENDPOINT}
        scripts:
          up: |-
            #!/bin/bash
            echo "connected" > /shared/vpnstatus
          down: |-
            #!/bin/bash
            echo "disconnected" > /shared/vpnstatus
