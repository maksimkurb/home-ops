---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app immich-server
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    service:
      main:
        ports:
          http:
            port: 3001

    ingress:
      main:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/enabled: "true"
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_PUBLIC_DOMAIN}
          nginx.ingress.kubernetes.io/configuration-snippet: |
            set $forwarded_client_ip "";
            if ($http_x_forwarded_for ~ "^([^,]+)") {
              set $forwarded_client_ip $1;
            }
            set $client_ip $remote_addr;
            if ($forwarded_client_ip != "") {
              set $client_ip $forwarded_client_ip;
            }
          nignx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/upstream-hash-by: "$client_ip"
          hajimari.io/appName: "Immich"
          hajimari.io/icon: image
        hosts:
          - host: &host "photos.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        className: nginx

    persistence:
      library:
        enabled: true
        existingClaim: immich
        globalMounts:
          - path: /usr/src/app/upload

    defaultPodOptions:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app

    controllers:
      main:
        replicas: 2
        strategy: RollingUpdate
        rollingUpdate:
          surge: 1
          unavailable: 1
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.98.2
            command: /bin/sh
            args:
              - ./start-server.sh
            envFrom:
              - secretRef:
                  name: immich
              - configMapRef:
                  name: immich-configmap
            resources:
              requests:
                cpu: 1m
                memory: 100Mi
              limits:
                cpu: 5
                memory: 1Gi
