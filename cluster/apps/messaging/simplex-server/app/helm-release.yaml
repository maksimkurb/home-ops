---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/app-template-4.2.0/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ${APP}
  labels:
    app.kubernetes.io/name: ${APP}
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.2.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 100Mi
        storageClass: local-path
        retain: true
        globalMounts:
          - path: /etc/opt/simplex
      logs:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 100Mi
        storageClass: local-path
        retain: true
        globalMounts:
          - path: /var/opt/simplex
      tls-certs:
        type: secret
        name: ${APP}-tls
        globalMounts:
          - path: /etc/ssl/certs/simplex
            readOnly: true

    # Pod security context
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 777
        runAsGroup: 777
        fsGroup: 777
        seccompProfile:
          type: RuntimeDefault

    resources:
      requests:
        cpu: 1m
        memory: 10Mi
      limits:
        memory: 500Mi

    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          main:
            image:
              repository: simplexchat/smp-server
              tag: v6.4.5
              pullPolicy: IfNotPresent
            command:
              - smp-server
              - start
            env:
              TZ: "${TIMEZONE}"
              ADDR: "smp.${SECRET_PUBLIC_DOMAIN}"
            envFrom:
              - secretRef:
                  name: ${APP}-secret
    service:
      main:
        controller: main
        type: LoadBalancer
        externalTrafficPolicy: Local
        loadBalancerIP: "${SVC_SIMPLEX_ADDR}"
        ports:
          chat:
            port: 5115
          https:
            port: 443

    ingress:
      main:
        enabled: true
        className: "nginx"
        annotations:
          external-dns.alpha.kubernetes.io/enabled: "true"
          external-dns.alpha.kubernetes.io/target: ${INGRESS_TUNNEL}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/ssl-passthrough: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          kubernetes.io/ingress.allow-http: "false"
          hajimari.io/enable: "false"
        hosts:
          - host: "smp.${SECRET_PUBLIC_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: https
