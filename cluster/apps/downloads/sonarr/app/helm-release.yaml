---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:

    global:
      nameOverride: *app

    service:
      main:
        controller: main
        ports:
          http:
            port: 80

    ingress:
      main:
        enabled: true
        annotations:
          # ForwardAuth start
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: |-
            http://authelia.security.svc.cluster.local:8000/api/verify
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://auth.${SECRET_PUBLIC_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Method $request_method;
          # ForwardAuth end
          hajimari.io/icon: "television-box"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        className: nginx
      api:
        enabled: true
        annotations:
          hajimari.io/enable: "false"
        hosts:
          - host: *host
            paths:
              - path: /api
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        className: nginx

    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config-v1
      media:
        enabled: true
        existingClaim: sonarr-downloads
        globalMounts:
          - path: /media

    defaultPodOptions:
      securityContext:
        runAsUser: 777
        runAsGroup: 777
        fsGroup: 777
        fsGroupChangePolicy: "OnRootMismatch"

    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.14.2938@sha256:75da01d2da78d226cd89352fbab919f2eb26ea9a8d6c592bf812dde5f8949243
            env:
              TZ: "${TIMEZONE}"
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__PORT: 80
              SONARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}"
              SONARR__LOG_LEVEL: info
              SONARR__POSTGRES_HOST: homelab-pgsql.database.svc.cluster.local
              SONARR__POSTGRES_MAIN_DB: sonarr
              SONARR__POSTGRES_LOG_DB: sonarr_log
              SONARR__POSTGRES_USER: sonarr
            envFrom:
              - secretRef:
                  name: *app
            resources:
              requests:
                cpu: 1m
                memory: 250Mi
              limits:
                memory: 2000Mi
