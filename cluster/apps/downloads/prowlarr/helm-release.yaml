---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app prowlarr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:

    global:
      nameOverride: *app

    service:
      main:
        ports:
          http:
            port: 80

    ingress:
      main:
        enabled: true
        annotations:
          # ForwardAuth start
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: |-
            http://authelia.security.svc.cluster.local:8000/api/verify
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://auth.${SECRET_PUBLIC_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Method $request_method;
          # ForwardAuth end
          hajimari.io/icon: "cloud-search"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_PUBLIC_DOMAIN}/css/base/prowlarr/dracula.css"></head>';
            sub_filter_once on;
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
        className: nginx

    persistence:
      config:
        enabled: true
        existingClaim: prowlarr-config-v1

    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"

    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/prowlarr-nightly
              tag: 1.21.2.4647@sha256:82dea0cb2ce34bc119826220c7cb0c8b26cd97b2e083b90335ef1d3a42ae775c
            env:
              TZ: "${TIMEZONE}"
              PROWLARR__INSTANCE_NAME: Prowlarr
              PROWLARR__PORT: 80
              PROWLARR__LOG_LEVEL: info
              PROWLARR__POSTGRES_HOST: postgres-rw.database
              PROWLARR__POSTGRES_MAIN_DB: prowlarr
              PROWLARR__POSTGRES_LOG_DB: prowlarr_log
              PROWLARR__POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-postgres
                    key: POSTGRES_USER
              PROWLARR__POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-postgres
                    key: POSTGRES_PASSWORD
            envFrom:
              - secretRef:
                  name: *app
            resources:
              requests:
                cpu: 1m
                memory: 100Mi
              limits:
                memory: 500Mi
