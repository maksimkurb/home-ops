---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:

    global:
      nameOverride: *app

    service:
      main:
        ports:
          http:
            port: 80

    ingress:
      main:
        enabled: true
        annotations:
          # ForwardAuth start
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: |-
            http://authelia.security.svc.cluster.local:8000/api/verify
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://auth.${SECRET_PUBLIC_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Method $request_method;
          # ForwardAuth end
          hajimari.io/icon: "movie"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_PUBLIC_DOMAIN}/css/base/radarr/dracula.css"></head>';
            sub_filter_once on;
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
        className: nginx
      api:
        enabled: true
        annotations:
          hajimari.io/enable: "false"
        hosts:
          - host: *host
            paths:
              - path: /api
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
        className: nginx

    persistence:
      config:
        enabled: true
        existingClaim: radarr-config-v1
      media:
        enabled: true
        type: nfs
        server: "nas01.${SECRET_PRIVATE_DOMAIN}"
        path: /tank/share
        globalMounts:
          - path: /media
      scripts:
        enabled: true
        type: configMap
        name: radarr-pushover
        defaultMode: 775
        readOnly: true
        advancedMounts:
          main:
            main:
              - path: /scripts/pushover-notify.sh
                subPath: notify.sh

    defaultPodOptions:
      annotations:
        reloader.stakater.com/auto: "true"
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups:
          - 5600

    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.15.1.9463@sha256:e9144f8a76d8e2a98f57a2ff6170e05f5880c6839d9fc351a9cb854813f8bc69
            env:
              TZ: "${TIMEZONE}"
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: 80
              RADARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}"
              RADARR__LOG_LEVEL: info
              PUSHOVER_DEBUG: "false"
              PUSHOVER_APP_URL: *host
              RADARR__POSTGRES_HOST: postgres-rw.database
              RADARR__POSTGRES_MAIN_DB: radarr
              RADARR__POSTGRES_LOG_DB: radarr_log
              RADARR__POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: radarr-postgres
                    key: POSTGRES_USER
              RADARR__POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: radarr-postgres
                    key: POSTGRES_PASSWORD
            envFrom:
              - secretRef:
                  name: *app
            resources:
              requests:
                cpu: 1m
                memory: 250Mi
              limits:
                memory: 2000Mi
