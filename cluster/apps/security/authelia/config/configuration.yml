---
access_control:
  default_policy: one_factor
  networks:
    - name: internal
      networks: ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]

  rules:
    # - domain: "auth.${SECRET_PUBLIC_DOMAIN}"
    #   policy: bypass

    # - domain: "*.${SECRET_PUBLIC_DOMAIN}"
    #   policy: bypass
    #   networks: ["internal"]

    - domain: "*.${SECRET_DOMAIN}"
      policy: bypass
      resources:
        - "^/manifest.json$"
        - "^/.well-known/(.*)$"
        - "^/favicon\\\\.(.*)$"

    # - domain: ["*.${SECRET_PUBLIC_DOMAIN}"]
    #   policy: bypass
    #   networks: ["internal"]

ntp:
  address: 'udp://pool.ntp.org:123'
  max_desync: '3s'
  disable_startup_check: true

totp:
  disable: false
  issuer: 'auth.${SECRET_PUBLIC_DOMAIN}'
  algorithm: 'sha1'
  digits: 6
  period: 30
  skew: 1
  secret_size: 32
  allowed_algorithms:
    - 'SHA1'
  allowed_digits:
    - 6
  allowed_periods:
    - 30
  disable_reuse_security_policy: false

identity_providers:
  oidc:
    access_token_lifespan: 1h
    authorize_code_lifespan: 3m
    id_token_lifespan: 1h
    refresh_token_lifespan: 90m
    enforce_pkce: public_clients_only
    cors:
      endpoints:
        - authorization
        - token
        - revocation
        - introspection
      allowed_origins_from_client_redirect_uris: true
    clients:
      - id: grafana
        description: Grafana
        secret: ${SECRET_GRAFANA_OAUTH_CLIENT_SECRET}
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        scopes:
          - openid
          - profile
          - groups
          - email
        redirect_uris:
          - https://grafana.${SECRET_PUBLIC_DOMAIN}/login/generic_oauth
        userinfo_signed_response_alg: 'none'

      - id: sftpgo
        description: SFTPGo
        secret: ${SECRET_SFTPGO_OAUTH_CLIENT_SECRET}
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        scopes:
          - openid
          - profile
          - groups
          - email
        redirect_uris:
          - https://f.${SECRET_PUBLIC_DOMAIN}/web/oidc/redirect
        userinfo_signed_response_alg: 'none'

      - id: nodered
        description: NodeRED
        secret: ${SECRET_NODERED_OAUTH_CLIENT_SECRET}
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        token_endpoint_auth_method: client_secret_post
        scopes:
          - openid
          - profile
          - groups
          - email
        redirect_uris:
          - https://nodered.${SECRET_PUBLIC_DOMAIN}/auth/strategy/callback
        userinfo_signed_response_alg: 'none'

      - id: immich
        description: Immich
        secret: ${SECRET_IMMICH_OAUTH_CLIENT_SECRET}
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        scopes:
          - openid
          - profile
          - groups
          - email
        redirect_uris:
          - app.immich:///oauth-callback
          - https://photos.${SECRET_PUBLIC_DOMAIN}/auth/login
          - https://photos.${SECRET_PUBLIC_DOMAIN}/user-settings
        userinfo_signing_algorithm: none

      - id: paperless
        description: Paperless-ngx
        secret: ${SECRET_PAPERLESS_OAUTH_CLIENT_SECRET}
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes:
          - openid
          - profile
          - groups
          - email
        redirect_uris:
          - 'https://paperless.${SECRET_PUBLIC_DOMAIN}/accounts/oidc/authelia/login/callback/'
        userinfo_signed_response_alg: 'none'
        token_endpoint_auth_method: 'client_secret_basic'
