---
access_control:
  default_policy: one_factor
  networks:
    - name: internal
      networks: ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]

  rules:
    # - domain: "auth.${SECRET_PUBLIC_DOMAIN}"
    #   policy: bypass

    # - domain: "*.${SECRET_PUBLIC_DOMAIN}"
    #   policy: bypass
    #   networks: ["internal"]

    - domain: "*.${SECRET_DOMAIN}"
      policy: bypass
      resources:
        - "^/manifest.json$"
        - "^/.well-known/(.*)$"
        - "^/favicon\\\\.(.*)$"

    # - domain: ["*.${SECRET_PUBLIC_DOMAIN}"]
    #   policy: bypass
    #   networks: ["internal"]

telemetry:
  metrics:
    enabled: true
    address: 'tcp://:8080'
    buffers:
      read: 4096
      write: 4096
    timeouts:
      read: '6s'
      write: '6s'
      idle: '30s'

log:
  level: 'debug'

server:
  address: 'tcp://:8000/'
  disable_healthcheck: true

notifier:
  disable_startup_check: true
  smtp:
    address: 'smtp://${SMTP_HOST}:587'
    timeout: '5s'
    username: '${SMTP_EMAIL}'
    password: '${SECRET_SMTP_PASSWORD}'
    sender: "Authelia <${SMTP_EMAIL}>"
    identifier: 'localhost'
    subject: "[Authelia] {title}"
    disable_require_tls: false
    disable_starttls: false
    disable_html_emails: false

session:
  secret: '{{ env "SECRET_SESSION_SECRET" }}'
  redis:
    host: 'authelia-redis'
    port: 6379
    password: '{{ env "SECRET_REDIS_PASSWORD" }}'
  cookies:
    - domain: '${SECRET_PUBLIC_DOMAIN}'
      authelia_url: 'https://auth.${SECRET_PUBLIC_DOMAIN}'
      default_redirection_url: 'https://start.${SECRET_PUBLIC_DOMAIN}'

storage:
  encryption_key: '{{ env "SECRET_STORAGE_ENCRYPTION_KEY" }}'
  postgres:
    address: 'tcp://homelab-pgsql.database:5432'
    database: 'authelia'
    schema: 'public'
    username: 'authelia'
    password: '{{ env "SECRET_POSTGRES_PASSWORD" }}'
    timeout: '5s'

ntp:
  address: 'udp://pool.ntp.org:123'
  max_desync: '3s'
  disable_startup_check: true

totp:
  disable: false
  issuer: 'auth.${SECRET_PUBLIC_DOMAIN}'
  algorithm: 'sha1'
  digits: 6
  period: 30
  skew: 1
  secret_size: 32
  allowed_algorithms:
    - 'SHA1'
  allowed_digits:
    - 6
  allowed_periods:
    - 30
  disable_reuse_security_policy: false

identity_validation:
  elevated_session:
    code_lifespan: '5 minutes'
    elevation_lifespan: '10 minutes'
    characters: 8
    require_second_factor: false
    skip_second_factor: false

authentication_backend:
  password_reset:
    disable: true
  ldap:
    address: 'ldap://glauth:3893'
    implementation: 'custom'
    timeout: '5s'
    base_dn: 'dc=glauth,dc=com'
    additional_users_dn: 'ou=users'
    users_filter: '(&({username_attribute}={input})(objectClass=posixAccount))'
    groups_filter: '(&(memberUid={username})(objectClass=posixGroup))'
    group_search_mode: 'filter'
    permit_referrals: false
    permit_unauthenticated_bind: false
    user: 'cn=authelia-user,dc=glauth,dc=com'
    password: '{{ env "SECRET_LDAP_PASSWORD" }}'
    attributes:
      distinguished_name: 'distinguishedName'
      username: 'cn'
      display_name: 'givenName'
      mail: 'mail'
      member_of: 'memberOf'
      group_name: 'ou'

identity_providers:
  oidc:
    hmac_secret: '{{ env "SECRET_HMAC_SECRET" }}'
    lifespans:
      access_token: '1h'
      authorize_code: '3m'
      id_token: '1h'
      refresh_token: '90m'
    jwks:
      - key_id: 'default'
        algorithm: 'RS256'
        use: 'sig'
        key: {{ secret "/config/jwks/rsa.2048.pem" | mindent 10 "|" | msquote }}
        certificate_chain: {{ secret "/config/jwks/rsa.2048.cert" | mindent 10 "|" | msquote }}
    enforce_pkce: public_clients_only
    cors:
      endpoints:
        - authorization
        - token
        - revocation
        - introspection
      allowed_origins_from_client_redirect_uris: true
    claims_policies:
      default:
        id_token: ['groups', 'email', 'preferred_username', 'name']

    clients:
      - client_id: grafana
        client_name: Grafana
        client_secret: ${SECRET_GRAFANA_OAUTH_CLIENT_SECRET}
        claims_policy: 'default'
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        scopes:
          - openid
          - profile
          - groups
          - email
        redirect_uris:
          - https://grafana.${SECRET_PUBLIC_DOMAIN}/login/generic_oauth
        userinfo_signed_response_alg: 'none'

      - client_id: sftpgo
        client_name: SFTPGo
        client_secret: ${SECRET_SFTPGO_OAUTH_CLIENT_SECRET}
        claims_policy: 'default'
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        scopes:
          - openid
          - profile
          - groups
          - email
        redirect_uris:
          - https://f.${SECRET_PUBLIC_DOMAIN}/web/oidc/redirect
        userinfo_signed_response_alg: 'none'

      - client_id: nodered
        client_name: NodeRED
        client_secret: ${SECRET_NODERED_OAUTH_CLIENT_SECRET}
        claims_policy: 'default'
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        token_endpoint_auth_method: client_secret_post
        scopes:
          - openid
          - profile
          - groups
          - email
        redirect_uris:
          - https://nodered.${SECRET_PUBLIC_DOMAIN}/auth/strategy/callback
        userinfo_signed_response_alg: 'none'

      - client_id: immich
        client_name: Immich
        client_secret: ${SECRET_IMMICH_OAUTH_CLIENT_SECRET}
        claims_policy: 'default'
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        scopes:
          - openid
          - profile
          - groups
          - email
        redirect_uris:
          - app.immich:///oauth-callback
          - https://photos.${SECRET_PUBLIC_DOMAIN}/auth/login
          - https://photos.${SECRET_PUBLIC_DOMAIN}/user-settings
        userinfo_signed_response_alg: 'none'
        token_endpoint_auth_method: 'client_secret_post'

      - client_id: paperless
        client_name: Paperless-ngx
        client_secret: ${SECRET_PAPERLESS_OAUTH_CLIENT_SECRET}
        claims_policy: 'default'
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes:
          - openid
          - profile
          - groups
          - email
        redirect_uris:
          - 'https://paperless.${SECRET_PUBLIC_DOMAIN}/accounts/oidc/authelia/login/callback/'
        userinfo_signed_response_alg: 'none'
        token_endpoint_auth_method: 'client_secret_basic'

      - client_id: 'homeassistant'
        client_name: 'Home Assistant'
        client_secret: ${SECRET_HASS_OAUTH_CLIENT_SECRET}
        public: false
        require_pkce: true
        claims_policy: 'default'
        pkce_challenge_method: 'S256'
        authorization_policy: 'one_factor'
        redirect_uris:
          - 'https://hass.${SECRET_PUBLIC_DOMAIN}/auth/oidc/callback'
        scopes:
          - openid
          - profile
          - groups
          - email
        id_token_signed_response_alg: 'RS256'
        token_endpoint_auth_method: 'client_secret_post'
