---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: networking
spec:
  interval: 30m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.13.3
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: cert-manager
      namespace: kube-system
  values:
    # CROWDSEC START
    image:
      PullPolicy: IfNotPresent
      image: crowdsecurity/controller
      # Crowdsec Remediation with Ingress Nginx requires to use our controller image
      tag: v1.13.2
      # If you update the tag, the digest needs to be updated as well
      digest: sha256:4575be24781cad35f8e58437db6a3f492df2a3167fed2b6759a6ff0dc3488d56
      registry: docker.io
    extraVolumes:
      - name: crowdsec-bouncer-plugin
        emptyDir: {}
    extraInitContainers:
      - name: init-clone-crowdsec-bouncer
        image: crowdsecurity/lua-bouncer-plugin
        imagePullPolicy: IfNotPresent
        env:
          - name: API_URL
            value: "http://crowdsec-service.security.svc.cluster.local:8080" # crowdsec lapi service-name
          - name: API_KEY
            value: "${SECRET_CROWDSEC_NGINX_BOUNCER_API_KEY}" # generated with `cscli bouncers add <bouncer_name>`
          - name: BOUNCER_CONFIG
            value: "/crowdsec/crowdsec-bouncer.conf"
          - name: CAPTCHA_PROVIDER
            value: "recaptcha" # valid providers are recaptcha, hcaptcha, turnstile
          # - name: SECRET_KEY
          #   value: "<your-captcha-secret-key>" # If you want captcha support otherwise remove this ENV VAR
          # - name: SITE_KEY
          #   value: "<your-captcha-site-key>" # If you want captcha support otherwise remove this ENV VAR
          - name: BAN_TEMPLATE_PATH
            value: "/etc/nginx/lua/plugins/crowdsec/templates/ban.html"
          - name: CAPTCHA_TEMPLATE_PATH
            value: "/etc/nginx/lua/plugins/crowdsec/templates/captcha.html"
          ## Appsec configuration, optional.
          ## Remove this section if not using appsec
          - name: APPSEC_URL
            value: "http://crowdsec-appsec-service.security.svc.cluster.local:7422" # if using our helm chart with "crowdsec" release name, and running the appsec in the "crowdsec" namespace
          - name: APPSEC_FAILURE_ACTION
            value: "passthrough" # What to do if the appsec is down, optional
          - name: APPSEC_CONNECT_TIMEOUT # connection timeout to the appsec, in ms, optionial
            value: "100"
          - name: APPSEC_SEND_TIMEOUT # write timeout to the appsec, in ms, optional
            value: "100"
          - name: APPSEC_PROCESS_TIMEOUT # max processing duration of the request, in ms, optional
            value: "1000"
          - name: ALWAYS_SEND_TO_APPSEC
            value: "false" # always send requests to the appsec, even if there's a decision against the IP, optional
        command:
          [
            "sh",
            "-c",
            "sh /docker_start.sh; mkdir -p /lua_plugins/crowdsec/; cp -R /crowdsec/* /lua_plugins/crowdsec/",
          ]
        volumeMounts:
          - name: crowdsec-bouncer-plugin
            mountPath: /lua_plugins
    extraVolumeMounts:
      - name: crowdsec-bouncer-plugin
        mountPath: /etc/nginx/lua/plugins/crowdsec
        subPath: crowdsec
    config:
      plugins: "crowdsec"
      lua-shared-dicts: "crowdsec_cache: 50m"
      server-snippet: |
        lua_ssl_trusted_certificate "/etc/ssl/certs/ca-certificates.crt"; # If you want captcha support otherwise remove this line
        resolver local=on ipv6=off;
    # CROWDSEC END
    controller:
      replicaCount: 2
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
        type: RollingUpdate
      extraEnvs:
        - name: TZ
          value: "${TIMEZONE}"
      #   configMapKey: "nginx.tmpl"
      service:
        loadBalancerIP: "${SVC_NGINX_ADDR}"
        annotations:
          io.cilium/lb-ipam-ips: "${SVC_NGINX_ADDR}"
        externalTrafficPolicy: Local
      publishService:
        enabled: true
      ingressClassResource:
        default: true
      allowSnippetAnnotations: true
      config:
        # CROWDSEC START
        lua-shared-dicts: "crowdsec_cache: 50m"
        # CROWDSEC END
        annotations-risk-level: Critical
        block-user-agents: "AddSearchBot,AI2Bot,Ai2Bot-Dolma,aiHitBot,Amazonbot,Andibot,anthropic-ai,Applebot,Applebot-Extended,Awario,bedrockbot,bigsur.ai,Brightbot\ 1.0,Bytespider,CCBot,ChatGPT\ Agent,ChatGPT-User,Claude-SearchBot,Claude-User,Claude-Web,ClaudeBot,CloudVertexBot,cohere-ai,cohere-training-data-crawler,Cotoyogi,Crawlspace,Datenbank\ Crawler,DeepSeekBot,Devin,Diffbot,DuckAssistBot,Echobot\ Bot,EchoboxBot,FacebookBot,facebookexternalhit,Factset_spyderbot,FirecrawlAgent,FriendlyCrawler,Gemini-Deep-Research,Google-CloudVertexBot,Google-Extended,Google-Firebase,Google-NotebookLM,GoogleAgent-Mariner,GoogleOther,GoogleOther-Image,GoogleOther-Video,GPTBot,iaskspider/2.0,ICC-Crawler,ImagesiftBot,img2dataset,ISSCyberRiskCrawler,Kangaroo\ Bot,LinerBot,Meta-ExternalAgent,meta-externalfetcher,Meta-ExternalFetcher,meta-webindexer,MistralAI-User,MistralAI-User/1.0,MyCentralAIScraperBot,netEstate\ Imprint\ Crawler,NovaAct,OAI-SearchBot,omgili,omgilibot,OpenAI,Operator,PanguBot,Panscient,panscient.com,Perplexity-User,PerplexityBot,PetalBot,PhindBot,Poseidon\ Research\ Crawler,QualifiedBot,QuillBot,quillbot.com,SBIntuitionsBot,Scrapy,SemrushBot-OCOB,SemrushBot-SWA,ShapBot,Sidetrade\ indexer\ bot,TerraCotta,Thinkbot,TikTokSpider,Timpibot,VelenPublicWebCrawler,WARDBot,Webzio-Extended,wpbot,YaK,YandexAdditional,YandexAdditionalBot,YouBot," # taken from https://github.com/ai-robots-txt/ai.robots.txt
        client-body-buffer-size: "100M"
        client-body-timeout: 120
        client-header-timeout: 120
        custom-http-errors: |-
          403,404,502,503,504
        enable-brotli: "true"
        enable-ocsp: "true"
        enable-real-ip: "true"
        force-ssl-redirect: "true"
        hide-headers: Server,X-Powered-By
        forwarded-for-header: "X-Forwarded-For"
        hsts-max-age: "31449600"
        keep-alive: 120
        keep-alive-requests: 10000
        proxy-body-size: 0
        proxy-buffer-size: 16k
        ssl-protocols: "TLSv1.3 TLSv1.2"
        use-forwarded-headers: "true"
        compute-full-forwarded-for: "true"
        log-format-upstream: '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_length $request_time [$proxy_upstream_name] [$proxy_alternative_upstream_name] $upstream_addr $upstream_response_length $upstream_response_time $upstream_status $req_id'
        plugins: ""
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: networking
          namespaceSelector:
            any: true
      extraArgs:
        default-ssl-certificate: "networking/${SECRET_DOMAIN/./-}-tls"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
              app.kubernetes.io/component: controller
      podAnnotations:
        configmap.reloader.stakater.com/reload: "cloudflare-proxied-networks"
      resources:
        requests:
          cpu: 1m
          memory: 250Mi
        limits:
          memory: 2000Mi
    defaultBackend:
      enabled: true
      image:
        repository: ghcr.io/tarampampam/error-pages
        tag: 3.7.0
      replicaCount: 2
      extraEnvs:
        - name: TEMPLATE_NAME
          value: hacker-terminal
        - name: SHOW_DETAILS
          value: "false"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - ingress-nginx
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - default-backend
                topologyKey: kubernetes.io/hostname
  valuesFrom:
    # Cloudflare Networks
    # https://www.cloudflare.com/ips/
    - targetPath: controller.config.proxy-real-ip-cidr
      kind: ConfigMap
      name: cloudflare-proxied-networks
      valuesKey: cloudflare-proxied-networks.txt
