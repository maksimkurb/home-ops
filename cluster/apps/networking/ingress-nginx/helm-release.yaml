---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: networking
spec:
  interval: 30m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.11.1
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: cert-manager
      namespace: kube-system
  values:
    controller:
      replicaCount: 2
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
        type: RollingUpdate
      extraEnvs:
        - name: TZ
          value: "${TIMEZONE}"
      # customTemplate:
      #   configMapName: "nginx-ingress-configs"
      #   configMapKey: "nginx.tmpl"
      service:
        loadBalancerIP: "${SVC_NGINX_ADDR}"
        annotations:
          io.cilium/lb-ipam-ips: "${SVC_NGINX_ADDR}"
        externalTrafficPolicy: Local
      publishService:
        enabled: true
      ingressClassResource:
        default: true
      allowSnippetAnnotations: true
      config:
        client-header-timeout: 120
        client-body-buffer-size: "100M"
        client-body-timeout: 120
        custom-http-errors: |-
          403,404,502,503,504
        enable-brotli: "true"
        forwarded-for-header: "CF-Connecting-IP"
        hsts-max-age: "31449600"
        keep-alive: 120
        keep-alive-requests: 10000
        proxy-body-size: "100M"
        ssl-protocols: "TLSv1.3 TLSv1.2"
        use-forwarded-headers: "true"
        plugins: ""
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: networking
          namespaceSelector:
            any: true
      extraArgs:
        default-ssl-certificate: "networking/${SECRET_DOMAIN/./-}-tls"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
              app.kubernetes.io/component: controller
      podAnnotations:
        configmap.reloader.stakater.com/reload: "cloudflare-proxied-networks"
      extraVolumeMounts:
        - name: nginx-plugin-drop-x-headers
          mountPath: /etc/nginx/lua/plugins/drop_x_headers
      extraVolumes:
        - name: nginx-plugin-drop-x-headers
          configMap:
            name: nginx-plugin-drop-x-headers
      resources:
        requests:
          cpu: 1m
          memory: 250Mi
        limits:
          memory: 2000Mi
    defaultBackend:
      enabled: true
      image:
        repository: ghcr.io/tarampampam/error-pages
        tag: 3.3.0
      replicaCount: 2
      extraEnvs:
        - name: TEMPLATE_NAME
          value: hacker-terminal
        - name: SHOW_DETAILS
          value: "false"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - ingress-nginx
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - default-backend
                topologyKey: kubernetes.io/hostname
  valuesFrom:
    # Cloudflare Networks
    # https://www.cloudflare.com/ips/
    - targetPath: controller.config.proxy-real-ip-cidr
      kind: ConfigMap
      name: cloudflare-proxied-networks
      valuesKey: cloudflare-proxied-networks.txt
