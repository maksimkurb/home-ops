---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-victoria-metrics-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://victoriametrics.github.io/helm-charts/
      chart: victoria-metrics-k8s-stack
      version: 0.6.1
      sourceRef:
        kind: HelmRepository
        name: victoria-metrics-charts
        namespace: flux-system
      interval: 5m
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    fullnameOverride: victoria-metrics
    vmsingle:
      enabled: true
      # spec for VMSingle crd
      # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmsinglespec
      spec:
        retentionPeriod: "14"
        replicaCount: 1
        storage:
          accessModes:
            - ReadWriteOnce
          storageClassName: "local-path"
          resources:
            requests:
              storage: 20Gi
    alertmanager:
      config:
        global:
          slack_api_url: "${SECRET_ALERT_MANAGER_DISCORD_WEBHOOK}"
          resolve_timeout: 5m
        receivers:
          # - name: "null"
          - name: "discord"
            slack_configs:
              - channel: "#alerts"
                icon_url: https://avatars3.githubusercontent.com/u/3380462
                username: "Alert Manager"
                send_resolved: true
                title: |-
                  [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }}{{ else }}{{ .CommonLabels.alertname }}{{ end }}
                text: >-
                  {{ range .Alerts -}}
                    **Alert:** {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

                  **Description:** {{ if ne .Annotations.description ""}}{{ .Annotations.description }}{{else}}N/A{{ end }}

                  **Details:**
                    {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                    {{ end }}
                  {{ end }}

          - name: "nodered-power-outage"
            webhook_configs:
              - url: "http://node-red.home:1880/webhook-am-power-outage"
                send_resolved: true
          - name: "nodered-am-watchdog"
            webhook_configs:
              - url: "http://node-red.home:1880/webhook-am-alert-manager-watchdog"
                send_resolved: true
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: "discord"
          routes:
            - receiver: "nodered-am-watchdog"
              match:
                alertname: Watchdog
            - receiver: "discord"
              match_re:
                severity: critical
              continue: true
            - receiver: "nodered-power-outage"
              match:
                alertname: UPSOnBattery
              continue: true
        inhibit_rules:
          - source_match:
              severity: "critical"
            target_match:
              severity: "warning"
            equal: ["alertname", "namespace"]
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "default-ak-outpost-authentik-embedded-outpost@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/icon: "torch"
          hajimari.io/group: "Monitoring"
        hosts:
          - "alert-manager.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "alert-manager.${SECRET_DOMAIN}"
            secretName: alert-manager-tls
      # source https://gist.github.com/milesbxf/e2744fc90e9c41b47aa47925f8ff6512
      monzoTemplate:
        enabled: false

    grafana:
      enabled: false
      forceDeployDashboards: true

    prometheus-node-exporter:
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
            - regex: (.+)
              sourceLabels:
                - __meta_kubernetes_endpoint_node_name
              targetLabel: node

    kube-state-metrics:
      enabled: true

    kubelet:
      enabled: true
      spec:
        relabelConfigs:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
          - targetLabel: "job"
            replacement: "kubelet"

    kubeApiServer:
      enabled: true

    kubeControllerManager:
      enabled: true
      endpoints:
        - 192.168.42.5
      service:
        enabled: true
        # port 10252 deprecated
        # https://github.com/kubernetes/kubeadm/issues/1327#issue-392216501
        port: 10257
        targetPort: 10257

    kubeEtcd:
      enabled: true
      endpoints:
        - 192.168.42.5
      service:
        enabled: true
        port: 2381
        targetPort: 2381

    kubeScheduler:
      enabled: true
      endpoints:
        - 192.168.42.5
      service:
        enabled: true
        # port 10251 deprecated
        # https://github.com/kubernetes/kubeadm/issues/1327#issue-392216501
        port: 10259
        targetPort: 10259

    kubeProxy:
      enabled: true
      endpoints:
        - 192.168.42.5