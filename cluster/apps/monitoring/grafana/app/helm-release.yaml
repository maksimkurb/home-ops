---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: grafana
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 8.15.0
  url: oci://ghcr.io/grafana/helm-charts/grafana
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: grafana
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    deploymentStrategy:
      type: Recreate
    admin:
      existingSecret: grafana-admin-secret
    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
      GF_SERVER_ROOT_URL: https://grafana.${SECRET_PUBLIC_DOMAIN}
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
    envFromSecrets:
      - name: grafana-env-secret
    grafana.ini:
      server:
        root_url: "https://grafana.${SECRET_PUBLIC_DOMAIN}"
      auth:
        signout_redirect_url: "https://auth.${SECRET_PUBLIC_DOMAIN}/logout"
        oauth_auto_login: true
      auth.basic:
        disable_login_form: false
      auth.generic_oauth:
        enabled: true
        name: 56k
        scopes: "openid profile email groups"
        empty_scopes: false
        auth_url: https://auth.${SECRET_PUBLIC_DOMAIN}/api/oidc/authorization
        token_url: https://auth.${SECRET_PUBLIC_DOMAIN}/api/oidc/token
        api_url: https://auth.${SECRET_PUBLIC_DOMAIN}/api/oidc/userinfo
        login_attribute_path: preferred_username
        groups_attribute_path: groups
        name_attribute_path: name
        use_pkce: true
        role_attribute_path: |
          contains(groups[*], 'admins') && 'Admin' || 'Viewer'
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth.anonymous:
        enabled: false
        org_id: 1
        org_name: Main Org.
        org_role: Viewer
      news:
        news_feed_enabled: false
      public_dashboards:
        enabled: true
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Loki, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://vmsingle-vm-k8s-stack.monitoring.svc.cluster.local:8428
            isDefault: true
          # - name: Loki
          #   type: loki
          #   uid: loki
          #   access: proxy
          #   url: http://loki-headless.monitoring.svc.cluster.local:3100
          #   jsonData:
          #     maxLines: 250
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://vmalert-vm-k8s-stack.monitoring.svc.cluster.local:8080
            jsonData:
              implementation: prometheus
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    securityContext:
      runAsNonRoot: true
      runAsUser: 777
      runAsGroup: 777
      fsGroup: 777
    dashboards:
      default:
        # apc-ups:
        #   # renovate: depName="APC UPS (SNMP)"
        #   gnetId: 12340
        #   revision: 1
        #   datasource: Prometheus
        # ceph-cluster:
        #   # renovate: depName="Ceph Cluster"
        #   gnetId: 2842
        #   revision: 18
        #   datasource: Prometheus
        # ceph-osd:
        #   # renovate: depName="Ceph - OSD (Single)"
        #   gnetId: 5336
        #   revision: 9
        #   datasource: Prometheus
        # ceph-pools:
        #   # renovate: depName="Ceph - Pools"
        #   gnetId: 5342
        #   revision: 9
        #   datasource: Prometheus
        cert-manager:
          # renovate: depName="Cert-manager-Kubernetes"
          gnetId: 20842
          revision: 3
          datasource: Prometheus
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 19
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 20
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 35
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 36
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 39
          datasource: Prometheus
        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19105
          revision: 7
          datasource: Prometheus
        smartctl-exporter:
          # renovate: depName="SMARTctl Exporter Dashboard"
          gnetId: 22604
          revision: 2
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        zfs:
          # renovate: depName="ZFS"
          gnetId: 7845
          revision: 4
          datasource: Prometheus
        minio-server:
          # renovate: depName="MinIO Server Dashboard"
          gnetId: 13502
          revision: 26
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        minio-buckets:
          # renovate: depName="MinIO Buckets Dashboard"
          gnetId: 19237
          revision: 2
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        label: grafana_datasource
        labelValue: ""
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: "nginx"
      annotations:
        external-dns.alpha.kubernetes.io/enabled: "true"
        external-dns.alpha.kubernetes.io/target: ${INGRESS_DEFAULT}
        external-dns.alpha.kubernetes.io/cloudflare-proxied: ${quote}${INGRESS_DEFAULT_CF_PROXY}${quote}
        nginx.ingress.kubernetes.io/affinity: "cookie"
        nginx.ingress.kubernetes.io/session-cookie-name: "grafana"
        nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
        nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
        hajimari.io/appName: "Grafana"
        hajimari.io/icon: view-dashboard
      hosts:
        - "grafana.${SECRET_PUBLIC_DOMAIN}"
    persistence:
      enabled: true
      storageClassName: local-path
    testFramework:
      enabled: false
