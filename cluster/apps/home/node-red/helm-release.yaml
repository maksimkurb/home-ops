---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: node-red
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s-labs.github.io/helm-charts/
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: home-assistant
      namespace: home
  values:

    service:
      main:
        controller: main
        ports:
          http:
            port: &port 1880

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: ${NGINX_INTERNAL_WHITELIST}
          hajimari.io/icon: "simple-icons:nodered"
          hajimari.io/group: "Home"
        hosts:
          - host: "nodered.${SECRET_PRIVATE_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: *port

    persistence:
      config:
        enabled: true
        existingClaim: node-red-config
        globalMounts:
          - path: /data

      passwd:
        enabled: true
        type: configMap
        name: nodered-passwd
        advancedMounts:
          main:
            main:
              - path: /etc/passwd
                subPath: nodered-passwd
                readOnly: true

      settingsjs:
        enabled: true
        type: secret
        name: nodered-config
        advancedMounts:
          main:
            main:
              - path: /data/settings.js
                subPath: settingsjs
                readOnly: true

    defaultPodOptions:
      securityContext:
        runAsUser: 777
        runAsGroup: 777
        fsGroup: 777
        fsGroupChangePolicy: "OnRootMismatch"

    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: docker.io/nodered/node-red
              tag: 4.1.0
            env:
              TZ: "${TIMEZONE}"
              NODE_RED_ENABLE_PROJECTS: "true"
              NODE_RED_ENABLE_SAFE_MODE: "false"
              REDBOT_ENABLE_MISSION_CONTROL: "true"
              # HTTP_PROXY: "http://gluetun.default:8888"
              # HTTPS_PROXY: "http://gluetun.default:8888"
            resources:
              requests:
                cpu: 1m
                memory: 100Mi
              limits:
                cpu: 1000m
                memory: 1500Mi
