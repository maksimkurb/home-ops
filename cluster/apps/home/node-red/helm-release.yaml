---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: node-red
  namespace: home
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: home-assistant
      namespace: home
  values:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                # Stick to the same node as Home Assistant
                - key: feature.node.kubernetes.io/custom-zigbee
                  operator: In
                  values:
                    - "true"
    controller:
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: docker.io/nodered/node-red
      tag: 3.1.0
    env:
      TZ: "${TIMEZONE}"
      NODE_RED_ENABLE_PROJECTS: "true"
      NODE_RED_ENABLE_SAFE_MODE: "false"
      REDBOT_ENABLE_MISSION_CONTROL: "true"
    podSecurityContext:
      runAsUser: 777
      runAsGroup: 777
      fsGroup: 777
      fsGroupChangePolicy: "OnRootMismatch"
    service:
      main:
        ports:
          http:
            port: 1880
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          external-dns.alpha.kubernetes.io/enabled: "true"
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_PUBLIC_DOMAIN}
          hajimari.io/icon: "simple-icons:nodered"
          hajimari.io/group: "Home"
        hosts:
          - host: "nodered.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "nodered.${SECRET_DOMAIN}"
            secretName: "node-red-tls"
    persistence:
      config:
        enabled: true
        existingClaim: node-red-config
        mountPath: "/data"
      passwd:
        enabled: true
        type: configMap
        name: nodered-passwd
        readOnly: true
        subPath: nodered-passwd
        mountPath: /etc/nodered-passwd
      settingsjs:
        enabled: true
        type: secret
        name: nodered-config
        readOnly: true
        subPath:
          - path: settingsjs
            mountPath: /data/settings.js
    resources:
      requests:
        cpu: 200m
        memory: 100Mi
      limits:
        cpu: 1000m
        memory: 1500Mi
    probes:
      liveness:
        type: HTTP
        path: /
        spec:
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness:
        type: HTTP
        path: /
        spec:
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      startup:
        type: HTTP
        path: /
        spec:
          initialDelaySeconds: 0
          timeoutSeconds: 1
          periodSeconds: 5
          failureThreshold: 30
