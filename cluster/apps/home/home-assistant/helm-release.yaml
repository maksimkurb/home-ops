---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: mosquitto
      namespace: home
  values:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-zigbee
                  operator: In
                  values:
                    - "true"
    image:
      repository: ghcr.io/home-assistant/home-assistant
      tag: 2023.6.2
    controller:
      annotations:
        reloader.stakater.com/auto: "true"
    env:
      TZ: "${TIMEZONE}"
    envFrom:
      - secretRef:
          name: home-assistant
    hostNetwork: true
    dnsPolicy: ClusterFirstWithHostNet
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        loadBalancerIP: "${SVC_HOME_ASSISTANT_ADDR}"
        ports:
          http:
            port: 8123
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          external-dns.alpha.kubernetes.io/enabled: "true"
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_PUBLIC_DOMAIN}
          hajimari.io/icon: "home-assistant"
          hajimari.io/group: "Home"
        hosts:
          - host: "hass.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "hass.${SECRET_DOMAIN}"
            secretName: "homeassistant-tls"
    initContainers:
      checkDbReady:
        name: check-db-ready
        image: postgres:15.3
        command:
          - "sh"
          - "-c"
          - 'until pg_isready -h homelab-pgsql.database.svc.cluster.local -p 5432; do echo "waiting for database to be ready"; sleep 2; done;'
    persistence:
      config:
        enabled: true
        existingClaim: home-assistant-config
        mountPath: /config
      secrets:
        enabled: true
        type: secret
        name: home-assistant-secrets-yaml
        readOnly: true
        subPath:
          - path: secrets_yaml
            mountPath: /config/secrets.yaml
          - path: auth_oicd_ini
            mountPath: /config/scripts/auth-oidc.ini
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/serial/by-id/usb-Texas_Instruments_CC2538_USB_CDC-if00
        hostPathType: CharDevice
    securityContext:
      privileged: true
    addons:
      codeserver:
        enabled: true
        image:
          repository: ghcr.io/coder/code-server
          tag: 4.14.0
        git:
          deployKeySecret: code-server
        workingDir: "/config"
        args:
          - --auth
          - "none"
          - --user-data-dir
          - "/config/.vscode"
          - --extensions-dir
          - "/config/.vscode"
        ingress:
          enabled: true
          ingressClassName: "nginx"
          annotations:
            # ForwardAuth start
            nginx.ingress.kubernetes.io/auth-method: GET
            nginx.ingress.kubernetes.io/auth-url: |-
              http://authelia.security.svc.cluster.local:8000/api/verify
            nginx.ingress.kubernetes.io/auth-signin: |-
              https://auth.${SECRET_PUBLIC_DOMAIN}?rm=$request_method
            nginx.ingress.kubernetes.io/auth-response-headers: |-
              Remote-User,Remote-Name,Remote-Groups,Remote-Email
            nginx.ingress.kubernetes.io/auth-snippet: |
              proxy_set_header X-Forwarded-Method $request_method;
            # ForwardAuth end
            hajimari.io/icon: "mdi:vs-code"
            hajimari.io/group: "Home"
            hajimari.io/appName: "Home Assistant Config"
          hosts:
            - host: "hass-config.${SECRET_DOMAIN}"
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - "hass-config.${SECRET_DOMAIN}"
              secretName: "homeassistant-config-tls"
        volumeMounts:
          - name: config
            mountPath: /config
    resources:
      requests:
        cpu: 50m
        memory: 100Mi
      limits:
        cpu: 1000m
        memory: 4000Mi
