---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ispy
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  values:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-nvidia-gpu
                  operator: In
                  values:
                    - "true"
    runtimeClassName: nvidia
    controller:
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: doitandbedone/ispyagentdvr
      tag: "5.0.7.0"
    env:
      TZ: "${TIMEZONE}"
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        loadBalancerIP: "${SVC_ISPY_ADDR}"
        ports:
          http:
            port: 8090
          turn:
            port: 3748
            protocol: UDP
          webrtc00:
            port: 50000
            protocol: UDP
          webrtc01:
            port: 50001
            protocol: UDP
          webrtc02:
            port: 50002
            protocol: UDP
          webrtc03:
            port: 50003
            protocol: UDP
          webrtc04:
            port: 50004
            protocol: UDP
          webrtc05:
            port: 50005
            protocol: UDP
          webrtc06:
            port: 50006
            protocol: UDP
          webrtc07:
            port: 50007
            protocol: UDP
          webrtc08:
            port: 50008
            protocol: UDP
          webrtc09:
            port: 50009
            protocol: UDP
          webrtc10:
            port: 50010
            protocol: UDP
    ingress:
      internal:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/server-snippet: |
            location /_internal_rewrite {
              set $namespace      "home";
              set $ingress_name   "ispy";
              set $service_name   "ispy";
              set $service_port   "8090";
              set $location_path  "/";
              set $global_rate_limit_exceeding n;
              rewrite_by_lua_block {
                      lua_ingress.rewrite({
                              force_ssl_redirect = false,
                              ssl_redirect = true,
                              force_no_ssl_redirect = false,
                              preserve_trailing_slash = false,
                              use_port_in_redirects = false,
                              global_throttle = { namespace = "", limit = 0, window_size = 0, key = { }, ignored_cidrs = { } },
                      })
                      balancer.rewrite()
                      plugins.run()
              }
              header_filter_by_lua_block {
                      lua_ingress.header()
                      plugins.run()
              }
              body_filter_by_lua_block {
                      plugins.run()
              }
              log_by_lua_block {
                      balancer.log()
                      monitor.call()
                      plugins.run()
              }
              port_in_redirect off;
              set $balancer_ewma_score -1;
              set $proxy_upstream_name "home-ispy-8090";
              set $proxy_host          $proxy_upstream_name;
              set $pass_access_scheme  $scheme;
              set $pass_server_port    $server_port;
              set $best_http_host      $http_host;
              set $pass_port           $pass_server_port;
              set $proxy_alternative_upstream_name "";
              # this location requires authentication
              add_header          Set-Cookie $auth_cookie;
              set_escape_uri $escaped_request_uri $request_uri;
              client_max_body_size                    100M;
              proxy_set_header Host                   $best_http_host;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection $connection_upgrade;
              proxy_set_header Host $host;
              proxy_set_header Proxy                  "";
              proxy_connect_timeout                   5s;
              proxy_send_timeout                      60s;
              proxy_read_timeout                      60s;
              proxy_buffering                         off;
              proxy_buffer_size                       4k;
              proxy_buffers                           4 4k;
              proxy_max_temp_file_size                1024m;
              proxy_request_buffering                 on;
              proxy_http_version                      1.1;
              proxy_cookie_domain                     off;
              proxy_cookie_path                       off;
              # In case of errors try the next upstream server before returning an error
              proxy_next_upstream                     error timeout;
              proxy_next_upstream_timeout             0;
              proxy_next_upstream_tries               3;
              rewrite /_internal_rewrite/(.*) /$1 break;
              proxy_pass http://upstream_balancer;
              proxy_redirect                          off;
            }
        hosts:
          - host: "ispy-internal.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "ispy-internal.${SECRET_DOMAIN}"
            secretName: "ispy-tls"
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          external-dns.alpha.kubernetes.io/enabled: "true"
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_PUBLIC_DOMAIN}
        hosts:
          - host: "ispy.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "ispy.${SECRET_DOMAIN}"
            secretName: "ispy-tls"
    persistence:
      config:
        enabled: true
        type: pvc
        accessMode: ReadWriteOnce
        size: 100Mi
        mountPath: /agent/Media/XML
        storageClass: nfs-proxmox
        retain: true
      commands:
        enabled: true
        type: pvc
        accessMode: ReadWriteOnce
        size: 100Mi
        mountPath: /agent/Commands
        storageClass: nfs-proxmox
        retain: true
      media:
        enabled: true
        existingClaim: ispy-media-nfs
        mountPath: /agent/Media/WebServerRoot/Media
        readOnly: false
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
        nvidia.com/gpu: "1"
      limits:
        cpu: 1000m
        memory: 1500Mi
        nvidia.com/gpu: "1"
