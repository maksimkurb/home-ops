---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: zigbee2mqtt
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  values:
    controllers:
      zigbee2mqtt:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 20

        containers:
          app:
            image:
              repository: ghcr.io/koenkk/zigbee2mqtt
              tag: 2.6.1
            envFrom:
              - secretRef:
                  name: zigbee2mqtt
            env:
              ZIGBEE2MQTT_DATA: /data
              ZIGBEE2MQTT_CONFIG_ADVANCED_CHANNEL: 20
              ZIGBEE2MQTT_CONFIG_HOMEASSISTANT_DISCOVERY_TOPIC: homeassistant
              ZIGBEE2MQTT_CONFIG_HOMEASSISTANT_LEGACY_ENTITY_ATTRIBUTES: false
              ZIGBEE2MQTT_CONFIG_HOMEASSISTANT_LEGACY_TRIGGERS: false
              ZIGBEE2MQTT_CONFIG_HOMEASSISTANT_STATUS_TOPIC: homeassistant/status
              ZIGBEE2MQTT_CONFIG_ADVANCED_LAST_SEEN: ISO_8601
              ZIGBEE2MQTT_CONFIG_ADVANCED_LEGACY_API: false
              ZIGBEE2MQTT_CONFIG_ADVANCED_LEGACY_AVAILABILITY_PAYLOAD: false
              ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_LEVEL: info
              ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_OUTPUT: '["console"]'
              ZIGBEE2MQTT_CONFIG_AVAILABILITY_ACTIVE_TIMEOUT: 60
              ZIGBEE2MQTT_CONFIG_AVAILABILITY_PASSIVE_TIMEOUT: 2000
              ZIGBEE2MQTT_CONFIG_DEVICE_OPTIONS_LEGACY: false
              ZIGBEE2MQTT_CONFIG_DEVICE_OPTIONS_RETAIN: true
              ZIGBEE2MQTT_CONFIG_EXPERIMENTAL_NEW_API: true
              ZIGBEE2MQTT_CONFIG_FRONTEND_ENABLED: 'true'
              ZIGBEE2MQTT_CONFIG_FRONTEND_PORT: 8080
              ZIGBEE2MQTT_CONFIG_FRONTEND_URL: https://z2m.${SECRET_PRIVATE_DOMAIN}
              ZIGBEE2MQTT_CONFIG_MQTT_BASE_TOPIC: zigbee2mqtt
              ZIGBEE2MQTT_CONFIG_MQTT_INCLUDE_DEVICE_INFORMATION: true
              ZIGBEE2MQTT_CONFIG_MQTT_KEEPALIVE: 60
              ZIGBEE2MQTT_CONFIG_MQTT_REJECT_UNAUTHORIZED: true
              ZIGBEE2MQTT_CONFIG_MQTT_SERVER: "mqtt://mosquitto.home.svc.cluster.local:1883"
              ZIGBEE2MQTT_CONFIG_MQTT_VERSION: 5
              ZIGBEE2MQTT_CONFIG_PERMIT_JOIN: false
            resources:
              requests:
                cpu: 50m
                memory: 384Mi
              limits:
                memory: 768Mi
            securityContext:
              privileged: true
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    service:
      app:
        controller: zigbee2mqtt
        ports:
          http:
            primary: true
            port: 8080

    ingress:
      app:
        className: "nginx"
        annotations:
          # ForwardAuth start
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: |-
            http://authelia.security.svc.cluster.local:8000/api/verify
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://auth.${SECRET_PUBLIC_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Method $request_method;
          # ForwardAuth end
          nginx.ingress.kubernetes.io/whitelist-source-range: ${NGINX_INTERNAL_WHITELIST}
          hajimari.io/icon: zigbee
        hosts:
          - host: z2m.${SECRET_PRIVATE_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http

    persistence:
      data:
        existingClaim: zigbee2mqtt-data
        advancedMounts:
          zigbee2mqtt:
            app:
              - path: /data
      # usb:
      #   enabled: true
      #   type: hostPath
      #   hostPath: /dev/serial/by-id/usb-Texas_Instruments_CC2538_USB_CDC-if00
      #   hostPathType: CharDevice
      #   advancedMounts:
      #     zigbee2mqtt:
      #       app:
      #         - path: /dev/ttyACM0

    # defaultPodOptions:
    #   affinity:
    #     nodeAffinity:
    #       requiredDuringSchedulingIgnoredDuringExecution:
    #         nodeSelectorTerms:
    #           - matchExpressions:
    #               - key: feature.node.kubernetes.io/custom-zigbee
    #                 operator: In
    #                 values:
    #                   - "true"
