---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: compreface
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  values:

    service:
      main:
        ports:
          http:
            port: 80

    ingress:
      main:
        enabled: true
        annotations:
          # ForwardAuth start
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: |-
            http://authelia.security.svc.cluster.local:8000/api/verify
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://auth.${SECRET_PUBLIC_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Method $request_method;
          # ForwardAuth end
          nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - host: "compreface.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - "compreface.${SECRET_DOMAIN}"
            secretName: "compreface-tls"
        className: nginx

    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: feature.node.kubernetes.io/custom-nvidia-gpu
                    operator: In
                    values:
                      - "true"
      runtimeClassName: nvidia

    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          check-db-ready:
            name: check-db-ready
            image:
              repository: postgres
              tag: 15.6
            command:
              - "sh"
              - "-c"
              - 'until pg_isready -h homelab-pgsql.database.svc.cluster.local -p
                5432; do echo "waiting for database to be ready"; sleep 2; done;'
        containers:
          main:
            image:
              repository: docker.io/exadel/compreface
              tag: "1.2.0-arcface-r100"
            env:
              TZ: "${TIMEZONE}"
              POSTGRES_DB: compreface
              EXTERNAL_DB: true
              SAVE_IMAGES_TO_DB: true
            envFrom:
              - secretRef:
                  name: compreface-secret
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
                nvidia.com/gpu: "1"
              limits:
                cpu: 2000m
                memory: 6000Mi
                nvidia.com/gpu: "1"
